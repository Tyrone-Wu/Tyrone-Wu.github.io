(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{518:function(v,_,t){"use strict";t.r(_);var o=t(25),e=Object(o.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"面试知识点整理-浏览器篇"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面试知识点整理-浏览器篇"}},[v._v("#")]),v._v(" 面试知识点整理 --   浏览器篇")]),v._v(" "),t("h2",{attrs:{id:"一、浏览器对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、浏览器对象"}},[v._v("#")]),v._v(" 一、浏览器对象")]),v._v(" "),t("hr"),v._v(" "),t("p",[v._v("总结摘取自"),t("a",{attrs:{href:"https://www.w3school.com.cn/jsref/dom_obj_location.asp",target:"_blank",rel:"noopener noreferrer"}},[v._v("W3CSchool"),t("OutboundLink")],1)]),v._v(" "),t("h3",{attrs:{id:"_1-window-对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-window-对象"}},[v._v("#")]),v._v(" 1. Window 对象")]),v._v(" "),t("blockquote",[t("p",[v._v("Window 对象表示浏览器中打开的窗口。"),t("br"),v._v("\n如果文档包含框架（frame 或 iframe 标签），浏览器会为 HTML 文档创建一个 window 对象，并为每个框架创建一个额外的 window 对象。")])]),v._v(" "),t("h3",{attrs:{id:"_2-navigator-对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-navigator-对象"}},[v._v("#")]),v._v(" 2. Navigator 对象")]),v._v(" "),t("blockquote",[t("p",[v._v("Navigator 对象包含有关浏览器的信息。")])]),v._v(" "),t("p",[t("strong",[v._v("Navigator 对象属性")])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("属性")]),v._v(" "),t("th",[v._v("描述")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("appCodeName")]),v._v(" "),t("td",[v._v("返回浏览器的代码名。")])]),v._v(" "),t("tr",[t("td",[v._v("appMinorVersion")]),v._v(" "),t("td",[v._v("返回浏览器的次级版本。")])]),v._v(" "),t("tr",[t("td",[v._v("appName")]),v._v(" "),t("td",[v._v("返回浏览器的名称。")])]),v._v(" "),t("tr",[t("td",[v._v("appVersion")]),v._v(" "),t("td",[v._v("返回浏览器的平台和版本信息。")])]),v._v(" "),t("tr",[t("td",[v._v("browserLanguage")]),v._v(" "),t("td",[v._v("返回当前浏览器的语言。")])]),v._v(" "),t("tr",[t("td",[v._v("cookieEnabled")]),v._v(" "),t("td",[v._v("返回指明浏览器中是否启用 cookie 的布尔值。")])]),v._v(" "),t("tr",[t("td",[v._v("cpuClass")]),v._v(" "),t("td",[v._v("返回浏览器系统的 CPU 等级。")])]),v._v(" "),t("tr",[t("td",[v._v("onLine")]),v._v(" "),t("td",[v._v("返回指明系统是否处于脱机模式的布尔值。")])]),v._v(" "),t("tr",[t("td",[v._v("platform")]),v._v(" "),t("td",[v._v("返回运行浏览器的操作系统平台。")])]),v._v(" "),t("tr",[t("td",[v._v("systemLanguage")]),v._v(" "),t("td",[v._v("返回 OS 使用的默认语言。")])]),v._v(" "),t("tr",[t("td",[v._v("userAgent")]),v._v(" "),t("td",[v._v("返回由客户机发送服务器的 user-agent 头部的值。")])]),v._v(" "),t("tr",[t("td",[v._v("userLanguage")]),v._v(" "),t("td",[v._v("返回 OS 的自然语言设置。")])])])]),v._v(" "),t("p",[t("strong",[v._v("Navigator 对象方法")])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("方法")]),v._v(" "),t("th",[v._v("描述")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("javaEnabled()")]),v._v(" "),t("td",[v._v("规定浏览器是否启用 Java。")])]),v._v(" "),t("tr",[t("td",[v._v("taintEnabled()")]),v._v(" "),t("td",[v._v("规定浏览器是否启用数据污点 (data tainting)。")])])])]),v._v(" "),t("h3",{attrs:{id:"_3-screen-对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-screen-对象"}},[v._v("#")]),v._v(" 3. Screen 对象")]),v._v(" "),t("blockquote",[t("p",[v._v("Screen 对象包含有关客户端显示屏幕的信息。")])]),v._v(" "),t("p",[t("strong",[v._v("Screen 对象属性")])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("属性")]),v._v(" "),t("th",[v._v("描述")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("availHeight")]),v._v(" "),t("td",[v._v("返回显示屏幕的高度 (除 Windows 任务栏之外)。")])]),v._v(" "),t("tr",[t("td",[v._v("availWidth")]),v._v(" "),t("td",[v._v("返回显示屏幕的宽度 (除 Windows 任务栏之外)。")])]),v._v(" "),t("tr",[t("td",[v._v("bufferDepth")]),v._v(" "),t("td",[v._v("设置或返回调色板的比特深度。")])]),v._v(" "),t("tr",[t("td",[v._v("colorDepth")]),v._v(" "),t("td",[v._v("返回目标设备或缓冲器上的调色板的比特深度。")])]),v._v(" "),t("tr",[t("td",[v._v("deviceXDPI")]),v._v(" "),t("td",[v._v("返回显示屏幕的每英寸水平点数。")])]),v._v(" "),t("tr",[t("td",[v._v("deviceYDPI")]),v._v(" "),t("td",[v._v("返回显示屏幕的每英寸垂直点数。")])]),v._v(" "),t("tr",[t("td",[v._v("fontSmoothingEnabled")]),v._v(" "),t("td",[v._v("返回用户是否在显示控制面板中启用了字体平滑。")])]),v._v(" "),t("tr",[t("td",[v._v("height")]),v._v(" "),t("td",[v._v("返回显示屏幕的高度。")])]),v._v(" "),t("tr",[t("td",[v._v("logicalXDPI")]),v._v(" "),t("td",[v._v("返回显示屏幕每英寸的水平方向的常规点数。")])]),v._v(" "),t("tr",[t("td",[v._v("logicalYDPI")]),v._v(" "),t("td",[v._v("返回显示屏幕每英寸的垂直方向的常规点数。")])]),v._v(" "),t("tr",[t("td",[v._v("pixelDepth")]),v._v(" "),t("td",[v._v("返回显示屏幕的颜色分辨率（比特每像素）。")])]),v._v(" "),t("tr",[t("td",[v._v("updateInterval")]),v._v(" "),t("td",[v._v("设置或返回屏幕的刷新率。")])]),v._v(" "),t("tr",[t("td",[v._v("width")]),v._v(" "),t("td",[v._v("返回显示器屏幕的宽度。")])])])]),v._v(" "),t("h3",{attrs:{id:"_4-history-对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-history-对象"}},[v._v("#")]),v._v(" 4. History 对象")]),v._v(" "),t("blockquote",[t("p",[v._v("History 对象包含用户（在浏览器窗口中）访问过的 URL。"),t("br"),v._v("\nHistory 对象是 window 对象的一部分，可通过 window.history 属性对其进行访问。")])]),v._v(" "),t("p",[t("strong",[v._v("History 对象属性")])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("属性")]),v._v(" "),t("th",[v._v("描述")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("length")]),v._v(" "),t("td",[v._v("返回浏览器历史列表中的 URL 数量。")])]),v._v(" "),t("tr",[t("td",[v._v("History")]),v._v(" "),t("td",[v._v("对象方法")])])])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("方法")]),v._v(" "),t("th",[v._v("描述")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("back()")]),v._v(" "),t("td",[v._v("加载 history 列表中的前一个 URL。")])]),v._v(" "),t("tr",[t("td",[v._v("forward()")]),v._v(" "),t("td",[v._v("加载 history 列表中的下一个 URL。")])]),v._v(" "),t("tr",[t("td",[v._v("go()")]),v._v(" "),t("td",[v._v("加载 history 列表中的某个具体页面。")])])])]),v._v(" "),t("h3",{attrs:{id:"_5-location-对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-location-对象"}},[v._v("#")]),v._v(" 5. Location 对象")]),v._v(" "),t("blockquote",[t("p",[v._v("Location 对象包含有关当前 URL 的信息。"),t("br"),v._v("\nLocation 对象是 Window 对象的一个部分，可通过 window.location 属性来访问。")])]),v._v(" "),t("p",[t("strong",[v._v("Location 对象属性")])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("属性")]),v._v(" "),t("th",[v._v("描述")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("hash")]),v._v(" "),t("td",[v._v("设置或返回从井号 (#) 开始的 URL（锚）。")])]),v._v(" "),t("tr",[t("td",[v._v("host")]),v._v(" "),t("td",[v._v("设置或返回主机名和当前 URL 的端口号。")])]),v._v(" "),t("tr",[t("td",[v._v("hostname")]),v._v(" "),t("td",[v._v("设置或返回当前 URL 的主机名。")])]),v._v(" "),t("tr",[t("td",[v._v("href")]),v._v(" "),t("td",[v._v("设置或返回完整的 URL。")])]),v._v(" "),t("tr",[t("td",[v._v("pathname")]),v._v(" "),t("td",[v._v("设置或返回当前 URL 的路径部分。")])]),v._v(" "),t("tr",[t("td",[v._v("port")]),v._v(" "),t("td",[v._v("设置或返回当前 URL 的端口号。")])]),v._v(" "),t("tr",[t("td",[v._v("protocol")]),v._v(" "),t("td",[v._v("设置或返回当前 URL 的协议。")])]),v._v(" "),t("tr",[t("td",[v._v("search")]),v._v(" "),t("td",[v._v("设置或返回从问号 (?) 开始的 URL（查询部分）。")])])])]),v._v(" "),t("p",[t("strong",[v._v("Location 对象方法")])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("属性")]),v._v(" "),t("th",[v._v("描述")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("assign()")]),v._v(" "),t("td",[v._v("加载新的文档。")])]),v._v(" "),t("tr",[t("td",[v._v("reload()")]),v._v(" "),t("td",[v._v("重新加载当前文档。")])]),v._v(" "),t("tr",[t("td",[v._v("replace()")]),v._v(" "),t("td",[v._v("用新的文档替换当前文档。")])])])]),v._v(" "),t("h2",{attrs:{id:"二、浏览器本地存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、浏览器本地存储"}},[v._v("#")]),v._v(" 二、浏览器本地存储")]),v._v(" "),t("hr"),v._v(" "),t("p",[v._v("关于浏览器的储存，在早期的浏览器中并没有这样的概念，导致无法进行浏览器的状态维护，服务器在接收请求的时候也无法判断是不是同一个浏览器。然鹅我们今天很多功能都无法在浏览器匿名的情况下进行，于是伟大的人类发明了现在这些用于浏览器储存的工具。")]),v._v(" "),t("p",[v._v("首先来一张浏览器调试窗口的截图：")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/19/170f03e17b3a2afc?w=283&h=212&f=png&s=9636",alt:""}})]),v._v(" "),t("p",[v._v("图中我们看到在浏览器的 Storage 栏目下面一共有五种本地储存方式，我们面试的时候一般遇到的都是"),t("code",[v._v("Cookie")]),v._v("、"),t("code",[v._v("localStorage")]),v._v("和"),t("code",[v._v("sessionStorage")]),v._v("之间的区别，作为归纳总结，一起来对这五种方式探个究竟：")]),v._v(" "),t("h3",{attrs:{id:"cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[v._v("#")]),v._v(" Cookie")]),v._v(" "),t("p",[v._v("上面说到浏览器一开始没有状态，所以"),t("code",[v._v("cookie")]),v._v("一开始设计的时候也不是为了做本地储存，而是作为浏览器的状态管理。")]),v._v(" "),t("p",[v._v("HTTP 协议是无状态协议，每一次请求结束即断开连接，下一次请求时候服务器又不知道是谁了。所以就出现了"),t("code",[v._v("cookie")]),v._v("的第一个特点："),t("strong",[v._v("随请求发送")]),v._v("，服务器通过解析请求当中的"),t("code",[v._v("cookie")]),v._v("，便能直到请求源相关的信息。")]),v._v(" "),t("p",[v._v("又因为随请求发送，便出现第二个特点："),t("strong",[v._v("容量有限")]),v._v("，过大的数据量会为传输造成不必要的开销，所以"),t("code",[v._v("cookie")]),v._v("的容量必须进行限制。")]),v._v(" "),t("p",[t("strong",[v._v("产生")])]),v._v(" "),t("ol",[t("li",[t("p",[v._v("在浏览器访问服务器时由服务器返回一个"),t("code",[v._v("Set-Cookie")]),v._v("响应头，当浏览器解析这个响应头时设置"),t("code",[v._v("cookie")])])]),v._v(" "),t("li",[t("p",[v._v("浏览器设置 "),t("code",[v._v("document.cookie =''")]),v._v(",在浏览器端的 cookie 截图中可以看到 cookie 的不同属性值，所以 js 具体操作 cookie 的格式如下："),t("br"),v._v(" "),t("code",[v._v('document.cookie="[key=value]; [expires=date]; [domain=domain]; [path=path]; [secure]"')])])])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/19/170f0511feb2ed1c?w=1602&h=229&f=png&s=54375",alt:""}})]),v._v(" "),t("ul",[t("li",[t("code",[v._v("key")]),v._v("设置的是 cookie 的键，value 设置的是 cookie 的值。")]),v._v(" "),t("li",[t("code",[v._v("expires")]),v._v(" 设置 cookie 的生存时间，默认为当前浏览器会话(Session)。当设置一个时间时，每次访问浏览器会用当前时间和 cookie 的 expries 做比对，如果过期 cookie 则会被删除。设置格式为 GMT 时间格式。")]),v._v(" "),t("li",[t("code",[v._v("domain")]),v._v("在浏览器读取 cookie 的时候只有当 cookie 的 domain 和浏览器当前 的域名匹配才能读取到。")]),v._v(" "),t("li",[t("code",[v._v("path")]),v._v("path 路径和 domain 功能类似，只是 path 的范围更小。path 控制 cookie 在当前域名的路径，只有路径相匹配 cookie 才能被读取到")]),v._v(" "),t("li",[t("code",[v._v("HttpOnly")]),v._v("安全属性。防止客户端脚本通过 document.cookie 等方式访问 Cookie，从而防止 XSS 攻击。")]),v._v(" "),t("li",[t("code",[v._v("Secure")]),v._v("只有在 HTTPS 时候才会发送。")]),v._v(" "),t("li",[t("code",[v._v("SameSite")]),v._v("可以让 Cookie 在跨站请求时不会被发送，从而可以阻止跨站请求伪造攻击（CSRF）。 - Strict 仅允许一方请求携带 Cookie，即浏览器将只发送相同站点请求的 Cookie，即当前网页 URL 与请求目标 URL 完全一致。 - Lax 允许部分第三方请求携带 Cookie - None 无论是否跨站都会发送 Cookie - 之前默认是 None 的，Chrome80 后默认是 Lax。"),t("br"),v._v("\n关于 samesite 属性，推荐一篇写的很好的文章："),t("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/157",target:"_blank",rel:"noopener noreferrer"}},[v._v("传送门"),t("OutboundLink")],1)])]),v._v(" "),t("p",[t("strong",[v._v("关键词")])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("特点")]),v._v(" "),t("th",[v._v("备注")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("有效期")]),v._v(" "),t("td",[v._v("默认浏览器关闭就消失，可以设置 HTTP 头信息中的 cache-control 属性的 max-age 值，或者修改 HTTP 头信息中的 expires 属性的值来延长有效期。")])]),v._v(" "),t("tr",[t("td",[v._v("作用域")]),v._v(" "),t("td",[v._v("通过文档源和文档路径来确定的。该作用域可以通过 cookie 的 path 和 domain 属性配置。")])]),v._v(" "),t("tr",[t("td",[v._v("数目和大小的限制")]),v._v(" "),t("td",[v._v("每个 web 服务器(域名)保存的 cookie 数不能超过 50 个，每个 cookie 保存的数据不能超过 4KB。")])]),v._v(" "),t("tr",[t("td",[v._v("过期设置")]),v._v(" "),t("td",[v._v("cookie 快要过期时，可以重新设置而不是删除")])]),v._v(" "),t("tr",[t("td",[v._v("缺陷")]),v._v(" "),t("td",[v._v("随请求发送，增加网络流量；容量小；只能储存字符串；有潜在的安全问题。")])])])]),v._v(" "),t("h3",{attrs:{id:"local-storage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#local-storage"}},[v._v("#")]),v._v(" Local Storage")]),v._v(" "),t("p",[v._v("HTML5 新加特性，主要用于本地储存，解决了 cookie 储存空间不足的问题。")]),v._v(" "),t("p",[v._v("在同一个域名下，会存储相同的一段 localStorage。")]),v._v(" "),t("p",[v._v("只存在于客户端，不参与通信，解决了 cookie 的"),t("strong",[v._v("性能和安全")]),v._v("问题。")]),v._v(" "),t("p",[t("strong",[v._v("优点")])]),v._v(" "),t("ul",[t("li",[v._v("localStorage 拓展了 cookie 的 4K 限制；")]),v._v(" "),t("li",[v._v("localStorage 会可以将第一次请求的数据直接存储到本地，这个相当于一个 5M 大小的针对于前端页面的数据库，相比于 cookie 可以节约带宽，但是这个却是只有在高版本的浏览器中才支持的；")]),v._v(" "),t("li",[v._v("localStorage 方法存储的数据没有时间限制。")])]),v._v(" "),t("p",[t("strong",[v._v("缺点")])]),v._v(" "),t("ul",[t("li",[v._v("各浏览器的容量不统一，并且在 IE8 以上才支持 localStorage 这个属性；")]),v._v(" "),t("li",[v._v("值类型限定为 string 类型，用于 JSON 对象类型需要一些转换；")]),v._v(" "),t("li",[v._v("localStorage 在浏览器的隐私模式下面是不可读取的；")]),v._v(" "),t("li",[v._v("localStorage 本质上是对字符串的读取，如果存储内容多的话会消耗内存空间，会导致页面变卡；")]),v._v(" "),t("li",[v._v("localStorage 不能被爬虫抓取到。")])]),v._v(" "),t("p",[v._v("可以用 localStorage 储存一些比较稳定的资源（LOGO，图片等）")]),v._v(" "),t("h3",{attrs:{id:"session-storage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#session-storage"}},[v._v("#")]),v._v(" Session Storage")]),v._v(" "),t("p",[v._v("sessionStorage 与 localStorage 的唯一一点区别就是 localStorage 属于永久性存储，而 sessionStorage 属于当会话结束的时候，sessionStorage 中的键值对就会被清空。")]),v._v(" "),t("p",[v._v("通常应用于表单信息储存和浏览动作的记录。")]),v._v(" "),t("h3",{attrs:{id:"indexdb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#indexdb"}},[v._v("#")]),v._v(" IndexDB")]),v._v(" "),t("p",[v._v("IndexDB 是运行在浏览器的非关系型数据库。不存在容量问题。")]),v._v(" "),t("p",[t("strong",[v._v("特性")])]),v._v(" "),t("ul",[t("li",[v._v("键值对储存")]),v._v(" "),t("li",[v._v("异步操作，对浏览器 I/O 提供支持")]),v._v(" "),t("li",[v._v("同源限制，不支持跨域访问")])]),v._v(" "),t("h3",{attrs:{id:"web-sql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#web-sql"}},[v._v("#")]),v._v(" Web SQL")]),v._v(" "),t("p",[v._v("HTML5 新增属性，使用 SQL 来操纵客户端数据库的 API，这些 API 是异步的，规范中使用的是 SQLlite（SQL 后端）。")]),v._v(" "),t("ul",[t("li",[v._v("openDatabase：这个方法使用现有数据库或创建新数据库创建数据库对象。")]),v._v(" "),t("li",[v._v("transaction：这个方法允许我们根据情况控制事务提交或回滚。")]),v._v(" "),t("li",[v._v("executeSql：这个方法用于执行真实的 SQL 查询。")])]),v._v(" "),t("h4",{attrs:{id:"各方案异同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#各方案异同"}},[v._v("#")]),v._v(" 各方案异同")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("cookie 数据始终在"),t("code",[v._v("同源的http请求中携带")]),v._v("（即使不需要），即 cookie 在浏览器和服务器间来回传递；而 sessionStorage 和 localStorage"),t("code",[v._v("不会自动把数据发给服务器")]),v._v("，仅在本地保存；")])]),v._v(" "),t("li",[t("p",[v._v("cookie 数据有路径（path）的概念，可以"),t("code",[v._v("限制cookie")]),v._v("只属于某个路径下；")])]),v._v(" "),t("li",[t("p",[v._v("存储大小限制也不同，cookie 数据不能超过"),t("code",[v._v("4k")]),v._v("，同时因为每次 http 请求都会携带 cookie，所以 cookie 只适合保存很小的数据，如会话标识；"),t("code",[v._v("sessionStorage和localStorage")]),v._v(" 可以达到"),t("code",[v._v("5M")]),v._v("或更大；")])]),v._v(" "),t("li",[t("p",[v._v("数据有效期不同，"),t("code",[v._v("sessionStorage")]),v._v("：仅在当前浏览器窗口关闭前有效，自然也就不可能持久保持；"),t("code",[v._v("localStorage")]),v._v("：始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；"),t("code",[v._v("cookie")]),v._v("只在设置的 cookie 过期时间之前一直有效，即使窗口或浏览器关闭；")])]),v._v(" "),t("li",[t("p",[v._v("作用域不同，"),t("code",[v._v("sessionStorage")]),v._v("不在不同的浏览器窗口中共享，即使是同一个页面；"),t("code",[v._v("localStorage")]),v._v(" 、"),t("code",[v._v("cookie")]),v._v("在所有同源窗口中都是共享的；")])])]),v._v(" "),t("p",[v._v("待更新~~~")]),v._v(" "),t("h2",{attrs:{id:"三、浏览器渲染"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、浏览器渲染"}},[v._v("#")]),v._v(" 三、浏览器渲染")]),v._v(" "),t("p",[v._v("大致过程分为以下几部：")]),v._v(" "),t("ul",[t("li",[v._v("键入 URL，检查"),t("code",[v._v("合法性")]),v._v(",不合法传给浏览器默认搜索引擎，合法进行下一步")]),v._v(" "),t("li",[v._v("DNS 查询\n"),t("ul",[t("li",[v._v("查询本地缓存")]),v._v(" "),t("li",[v._v("查询 host 文件")]),v._v(" "),t("li",[v._v("DNS 查询 IP 地址")])])]),v._v(" "),t("li",[v._v("TCP 封包，三次握手建立连接发送客户端请求")]),v._v(" "),t("li",[v._v("服务端接收客户端请求，响应响应内容")]),v._v(" "),t("li",[v._v("断开 TCP 连接")]),v._v(" "),t("li",[v._v("浏览器解析服务端返回的文件，构建 DOM 树并渲染")])])])}),[],!1,null,null,null);_.default=e.exports}}]);