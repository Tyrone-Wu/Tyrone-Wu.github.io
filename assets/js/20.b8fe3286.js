(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{514:function(t,s,a){"use strict";a.r(s);var n=a(25),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第七章-函数表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第七章-函数表达式"}},[t._v("#")]),t._v(" 第七章 函数表达式")]),t._v(" "),a("h3",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("本系列是在学习 JS 的过程中所做的读书笔记，将重点知识提取出来在闲暇时刻翻阅，如果你看过这本书，那收藏起来当复习用；如果你没看过这本书，那还犹豫啥，收藏起来抱佛脚用的啦~~~")]),t._v(" "),a("blockquote",[a("p",[t._v("注：内容摘抄或总结自《JavaScript 高级程序设计》第三到七章")])]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("定义函数的方式有两种：一种是函数声明，另一种就是函数表达式。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fnName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arg0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数体")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数表达式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fnName")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arg0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数体")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[a("strong",[t._v("函数声明提升")]),t._v(":是在执行 代码之前会先读取函数声明。这就意味着可以把函数声明放在调用它的语句后面。")]),t._v(" "),a("p",[a("strong",[t._v("匿名函数")]),t._v("：函数表达式创建函数情况下创建的函数叫做匿名函数（anonymous function），因为 function 关键字后面没有标识符。")]),t._v(" "),a("h2",{attrs:{id:"一、递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、递归"}},[t._v("#")]),t._v(" 一、递归")]),t._v(" "),a("p",[t._v("递归函数是在一个函数通过名字调用自身的情况下构成的。")]),t._v(" "),a("h2",{attrs:{id:"二、闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、闭包"}},[t._v("#")]),t._v(" 二、闭包")]),t._v(" "),a("p",[t._v("闭包是指有权访问另一个 函数作用域中的变量的函数。")]),t._v(" "),a("p",[t._v("当某个函数被调用时，会创建一个执行环境（execution context）及相应的作用域链。 然后，使用 arguments 和其他命名参数的值来初始化函数的活动对象（activation object）。但在作用域 链中，外部函数的活动对象始终处于第二位，外部函数的外部函数的活动对象处于第三位，……直至作为作用域链终点的全局执行环境。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" value2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" value2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("上述代码执行过程中产生的作用域链示意图：\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/1/1709650d684c1c90?w=706&h=278&f=png&s=32777",alt:""}})]),t._v(" "),a("p",[t._v("当调用 compare()时，会创建一个包含 arguments、value1 和 value2 的活动对象。全局执行环境的变量对象（包含 result 和 compare）在 compare()执行环境的作用域链中则处于第二位。")]),t._v(" "),a("p",[t._v("匿名函数从外层函数返回后，其作用域链被初始化为包含外层函数的活动对象和全局变量对象。这样匿名函数可以访问外层函数中定义的变量。")]),t._v(" "),a("p",[t._v("外层函数执行完毕之后，其执行环境的作用域链会被销毁，但是其活动对象任然保留在内存之中，直到匿名函数被销毁之后，外层函数的活动对象才会被销毁。")]),t._v(" "),a("blockquote",[a("p",[t._v("由于闭包会携带包含它的函数的作用域，因此会比其他函数占用更多的内存。过度使用闭包可能会导致内存占用过多。")])]),t._v(" "),a("h3",{attrs:{id:"_1-闭包与变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-闭包与变量"}},[t._v("#")]),t._v(" 1.闭包与变量")]),t._v(" "),a("p",[t._v("作用域链的这种配置机制引出了一个值得注意的副作用，即闭包只能取得包含函数中任何变量的后一个值。")]),t._v(" "),a("p",[t._v("我们可以通过创建另一个匿名函数强制让闭包的行为 符合预期")]),t._v(" "),a("h3",{attrs:{id:"_2-this-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-this-对象"}},[t._v("#")]),t._v(" 2.this 对象")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("this 对象是在运行时基于函数的执 行环境绑定的：在全局函数中，this 等于 window，而当函数被作为某个对象的方法调用时，this 等 于那个对象。")])]),t._v(" "),a("li",[a("p",[t._v("匿名函数的执行环境具有全局性，因此其 this 对象通常指向 window。")])]),t._v(" "),a("li",[a("p",[t._v("每个函数在被调用时都会自动取得两个特殊变量：this 和 arguments。内部函数在搜索这两个变量时，"),a("strong",[t._v("只会搜索到其活动对象为止")]),t._v("，因此永远不可能直接访问外部函数中的这两个变量。")])]),t._v(" "),a("li",[a("p",[t._v("把外部作用域中的 this 对象保存在一个闭包能够访问 到的变量里，就可以让闭包访问该对象了,对于 arguments 也是同样的道理。")])])]),t._v(" "),a("h3",{attrs:{id:"_3-内存泄漏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-内存泄漏"}},[t._v("#")]),t._v(" 3.内存泄漏")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果闭包的作用域链中保存着一个 HTML 元素，那么就意味着该元素将无法被销毁。")])]),t._v(" "),a("li",[a("p",[t._v("把 element 变量设置为 null。这样就能够解除对 DOM 对象的引 用，顺利地减少其引用数，确保正常回收其占用的内存。")])])]),t._v(" "),a("h2",{attrs:{id:"三、模仿块级作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、模仿块级作用域"}},[t._v("#")]),t._v(" 三、模仿块级作用域")]),t._v(" "),a("p",[t._v("JavaScript 没有块级作用域的概念。这意味着在块语句中定义的变量，实际上是在包含函数中而非语句中创建的。")]),t._v(" "),a("p",[t._v("所以在 JAVA、C++等语言中，函数中定义 for 循环时里面的 i 只在循环内部有效，但是在 js 当中由于是创建在函数中，所以在函数的其他地方依然可以调用。")]),t._v(" "),a("blockquote",[a("p",[t._v("当然，上面所述的情况，在 ES6 之后就用 Let 完美解决。")])]),t._v(" "),a("ul",[a("li",[t._v("JavaScript 从来不会告诉你是否多次声明了同一个变量；遇到这种情况，它只会对后续的声明视而不 见（不过，它会执行后续声明中的变量初始化）。")]),t._v(" "),a("li",[t._v("JavaScript 将 function 关键字当作一个函数声明的开始，而函数声明后面不能跟圆括号。")]),t._v(" "),a("li",[t._v("函数表达式的后面可以跟圆括号。要将函数声明转换成函数表达式， 只要加上一对圆括号即可。")]),t._v(" "),a("li",[t._v("这种做法可以减少闭包占用的内存问题，因为没有指向匿名函数的引用。只要函数执行完毕，就可以立即销毁其作用域链了。")])]),t._v(" "),a("h2",{attrs:{id:"四、私有变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、私有变量"}},[t._v("#")]),t._v(" 四、私有变量")]),t._v(" "),a("ul",[a("li",[t._v("严格来讲，JavaScript 中没有私有成员的概念；所有对象属性都是公有的。")]),t._v(" "),a("li",[t._v("任何在函数中定义的变量，都可以认为是私有变量，因为不能在函数的外部访问这些变量。私有变量包括函数的参数、局部变量和在函数内部定义的其他函数。")]),t._v(" "),a("li",[t._v("把有权访问私有变量和私有函数的公有方法称为特权方法（privileged method）。有两种在对象 上创建特权方法的方式。第一种是在构造函数中定义特权方法；另一种是用静态私有变量来实现特权方法。")])]),t._v(" "),a("h3",{attrs:{id:"_1-静态私有变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-静态私有变量"}},[t._v("#")]),t._v(" 1.静态私有变量")]),t._v(" "),a("ul",[a("li",[t._v("初始化未经声明的变量，总是会创建一个全局变量。在严格模式下 给未经声明的变量赋值会导致错误。")]),t._v(" "),a("li",[t._v("在函数内部创建全局对象，通过对象原型方式定义特权方法，由于对象是全局的，可以在任何地方引用。")])]),t._v(" "),a("h3",{attrs:{id:"_2-模块模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-模块模式"}},[t._v("#")]),t._v(" 2.模块模式")]),t._v(" "),a("ul",[a("li",[t._v("单例（singleton）指的就是只有一个实例的对象。按照惯例，JavaScript 是以对象字面量的方式来创建单例对象的。")]),t._v(" "),a("li",[t._v("如果必须创建一个对象并以某些数据对其进行初始化，同时还要公开一些能够访问这些私有 数据的方法，那么就可以使用模块模式。")]),t._v(" "),a("li",[t._v("单例通常都是作为全局对象存在的，我们不 会将它传递给一个函数。也就没有什么必要使用 instanceof 操作符来检查其对象类型了。")])]),t._v(" "),a("h3",{attrs:{id:"_3-增强的模块模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-增强的模块模式"}},[t._v("#")]),t._v(" 3.增强的模块模式")]),t._v(" "),a("p",[t._v("-这种增强的模块模式适合那 些单例必须是某种类型的实例，同时还必须添加某些属性和（或）方法对其加以增强的情况。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" singleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//私有变量和私有函数")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" privateVariable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("privateFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建对象")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" object "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//添加特权/公有属性和方法")]),t._v("\n\tobject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("publicProperty "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tobject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("publicMethod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tprivateVariable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("privateFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回这个对象")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("h2",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("在 JavaScript 编程中，函数表达式是一种非常有用的技术。使用函数表达式可以无须对函数命名，从而实现动态编程。匿名函数，也称为拉姆达函数，是一种使用 JavaScript 函数的强大方式。以下总结了函数表达式的特点。")]),t._v(" "),a("ul",[a("li",[t._v("函数表达式不同于函数声明。函数声明要求有名字，但函数表达式不需要。没有名字的函数表达式也叫做匿名函数。")]),t._v(" "),a("li",[t._v("在无法确定如何引用函数的情况下，递归函数就会变得比较复杂；")]),t._v(" "),a("li",[t._v("递归函数应该始终使用 arguments.callee 来递归地调用自身，不要使用函数名——函数名可能会发生变化。")])]),t._v(" "),a("p",[t._v("当在函数内部定义了其他函数时，就创建了闭包。闭包有权访问包含函数内部的所有变量，原理如下。")]),t._v(" "),a("ul",[a("li",[t._v("在后台执行环境中，闭包的作用域链包含着它自己的作用域、包含函数的作用域和全局作用域。")]),t._v(" "),a("li",[t._v("通常，函数的作用域及其所有变量都会在函数执行结束后被销毁。")]),t._v(" "),a("li",[t._v("但是，当函数返回了一个闭包时，这个函数的作用域将会一直在内存中保存到闭包不存在为止。")])]),t._v(" "),a("p",[t._v("使用闭包可以在 JavaScript 中模仿块级作用域（JavaScript 本身没有块级作用域的概念），要点如下。")]),t._v(" "),a("ul",[a("li",[t._v("创建并立即调用一个函数，这样既可以执行其中的代码，又不会在内存中留下对该函数的引用。")]),t._v(" "),a("li",[t._v("结果就是函数内部的所有变量都会被立即销毁——除非将某些变量赋值给了包含作用域（即外 部作用域）中的变量。")])]),t._v(" "),a("p",[t._v("闭包还可以用于在对象中创建私有变量，相关概念和要点如下。")]),t._v(" "),a("ul",[a("li",[t._v("即使 JavaScript 中没有正式的私有对象属性的概念，但可以使用闭包来实现公有方法，而通过公有方法可以访问在包含作用域中定义的变量。")]),t._v(" "),a("li",[t._v("有权访问私有变量的公有方法叫做特权方法。")]),t._v(" "),a("li",[t._v("可以使用构造函数模式、原型模式来实现自定义类型的特权方法，也可以使用模块模式、增强 的模块模式来实现单例的特权方法。")])]),t._v(" "),a("p",[t._v("JavaScript 中的函数表达式和闭包都是极其有用的特性，利用它们可以实现很多功能。不过，因为创建闭包必须维护额外的作用域，所以过度使用它们可能会占用大量内存。")]),t._v(" "),a("p",[t._v("恭喜你读完本章节！作为 JS 的基础内容学习!本系列的文章先告一段落啦！我读完之后感觉醍醐灌顶！你呢？？？ 哈哈哈！继续加油！")])])}),[],!1,null,null,null);s.default=r.exports}}]);